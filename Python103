# Working with functions. This will deal with working with functions. 
# Constructing arguements, working with lists, ranges, and getting data in and out of functions
# The 'def' before a function defines it, which if not done giver a NameError.

# A simple 'function'
def func():
    print("You just called a function!")
    
# A simple 'function' output
>>> func()
You just called a function!
>>> 

# The next step is seeing how arguments are added to 'functions'. In this 'function', "word" has been added as an argument and 
# will be called when using the 'function'. It is important to remember that like all strings, the arguments must be in quotes.

# A simple 'function' with one argument
def WordFunc(word):
    print(word + "!")

WordFunc("Keep")
WordFunc("It")
WordFunc("Simple")
WordFunc("Stupid")

# A simple 'function' with one argument output
Keep!
It!
Simple!
Stupid!
>>> 

# 'Functions' allow multiple arguments to be included.
# A simple 'function' with multiple arguments. It will simply add 2 numbers together.
def MultiFunc(x,y):
    ans = x + y
    print(ans)

# A simple 'function' with multiple arguments output.
>>> MultiFunc(5,4)
9
>>>

# It is important to remember that 'functions' that contain variables, can only call those variables when using the function. 
# The 'function' variables cannot be called outside of the function.

# The next thing is that functions can be 'objects', just like 'lists'. 'Objects' are the core to object oriented programming (OOP).
# 
