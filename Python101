## Python 3.6.#
## Online Compiler: https://repl.it/languages/python3
## This module will include examples of data types and operators
## Modulce includes variable assignments and type conversions

# Printing a simple statement. Double quotes and single quotes yield same result in this case.
>>> print("Hello World!")
Hello World!
>>> print('Hello World!')
Hello World!

# Separate different steps in the equation with parentheses.
>>> 2*6+5
17
>>> 2*(6+5)
22

# Doing simple operations. This includes manipulating strings and numbers and can happen without a 'print' statement.
# Exponetioation(**), Multiplication(*), Division(/), Remainder(%), Quotient(//), Addition(+), and Subtraction(-). 
>>> 6**2
36
>>> 2*6
12
>>> 12/2
6.0
>>> 12//2
6
>>> 7+5
12
>>> 9-5
4
>>> 9%2
1

# Division equations produce a float number if using one forward slash. This is because the the other equations will always 
# yield an integer. However, dividing an integer by another may not always produce an integer as shown in the these examples.
# Floats are the numbers which are not integers. They are followed by a decimal with a number after.
## Python will change an integer into a float, but this is the only type conversion it does on its own.
>>> 11//3
3
>>> 11/3
3.666666666666666

# Automatic type conversion from integer to a float.
>>> 2+2
4
>>> 2+2.0
4.0
>>> 2+2.1
4.1

# More about strings. Strings have to be in a double or single quotations. 
>>> print("This is a string")

# For charactes that cannot be included in strings, a backslash is required.  The double quotes doesnt affect a single quote.
# This produces a 'SyntaxError'.  
>>> print('The dog's toy')

# This does not produce a SyntaxError
>>> print('The dog\'s toy')
The dog's toy
>>> print("The dogs's toy")
The dogs's toy

# Backslash also allows the moving of a string to a new line.
>>> print("Where is the toy? \nOver there!!")
Where is the toy? 
Over there!!

# The triple quotes also allows a Enter key stroke to move to a new line without a backslash
>>> print("""Where is the toy?
Over there!!""")
Where is the toy?
Over there!!

# The goal of a program is to make life easier or entertain us. This means we need inputs, which allow programs to be interactive.
>>> input("Where is the toy? ")
Where is the toy? Over there!
'Over there!'

# Manipulating variables is important in Python, as with any language, especially when creating loops and object oriented programming.
# x += n is the same as x = x + n. This saves space, should be faster, and easier to write. This works with numbers and strings.
>>> x = 3
>>> print(x)
3
>>> x -= 1
>>> print(x)
2
>>> x += 4
>>> print(x)
6

# Booleans are a data type that yield a true/false value or compare different values. 
# This is where Comparison(==), Not equal(!=), Greater than(>) or equal to(>=), and Less than(<) or equal to(<=) come into usage.
# This works with numbers or strings.
>>> 6 == 6
True
>>> 6 == 7
False
>>> 6 >= 7
False
>>> 6 <= 7
True
>>> "hello" == "hello"
True
>>> "HELLO" == "HELLO"
True
>>> "HELLO" == "hello"
False
>>> 6 != 6
False
>>> 6 != 7
True

# Statement of assumptionsi.e. things people should already know.
# 1 - You cannot divide by zero(0). In Python it will create a 'ZeroDivisionError'
# 2 - How to assign variables and that there are different data types.
# 3 - How to use an editor or compiler.
